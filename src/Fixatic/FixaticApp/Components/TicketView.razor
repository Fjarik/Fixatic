@using Fixatic.Services

@page "/ticket"
@layout AppLayout
<PageTitle>Ticket View</PageTitle>

@inject ITicketsService _ticketsService;

@if (Model == null)
{
    @LoadTestTicket()
    <p>Loading ticket</p>
}
else
{
    <MudPaper Elevation="1">
        <MudGrid Class="pl-4 pr-4 mb-4">
            <MudItem xs="12">
                <MudGrid Justify="Justify.SpaceBetween">
                    <MudItem xs="7">
                        <MudText Typo="Typo.h4">@Model.Title</MudText>
                    </MudItem>
                </MudGrid>
            </MudItem>
            <MudItem xs="12">
                <MudGrid Justify="Justify.SpaceBetween">
                    <MudItem xs="7">
                        <MudGrid>
                            <MudItem xs="12">
                                <MudText Typo="Typo.body1">@Model.Content</MudText>
                            </MudItem>
                            @if (Attachement != null)
                            {
                                <MudItem xs="2">
                                    <MudGrid Spacing="1">
                                        <MudPaper Elevation="1" Class="pa-4">
                                            <MudItem xs="12">
                                                @*Tady by šel udělat náhled, ale to bych asi dělal jen když zbyde čas (copium)*@
                                                <MudImage Fluid="true" Src="/img/attachement_skeleton.png"></MudImage>
                                            </MudItem>
                                            <MudItem>
                                                <MudText Typo="Typo.subtitle1">@Attachement.Name</MudText>
                                            </MudItem>
                                        </MudPaper>
                                    </MudGrid>
                                </MudItem>
                            }
                        </MudGrid>
                    </MudItem>
                    <MudItem xs="3">
                        <MudTreeView T="string">
                            <MudTreeViewItem Value='@Model.GetPriorityString()' Icon="@Icons.Filled.PriorityHigh" IconColor="Color.Warning"/>

                            @if (Model.DateSolved == null)
                            {
                                <MudTreeViewItem Value='"Unsolved"' Icon="@Icons.Filled.CheckBoxOutlineBlank" IconColor="Color.Error"/>
                            }
                            else
                            {
                                <MudTreeViewItem Value='"Solved"' Icon="@Icons.Filled.CheckBox" IconColor="Color.Success"/>
                            }

                            @switch (Model.GetTypeString())
                            {
                                case "Security":
                                    <MudTreeViewItem Value='"Security"' Icon="@Icons.Filled.Security" IconColor="Color.Error"/>
                                    break;
                                case "Bug":
                                    <MudTreeViewItem Value='"Bug"' Icon="@Icons.Filled.BugReport" IconColor="Color.Warning"/>
                                    break;
                                case "Performance":
                                    <MudTreeViewItem Value='"Performance"' Icon="@Icons.Filled.MoreTime"/>
                                    break;
                                default:
                                    break;
                            }

                            <MudTreeViewItem Value='@GetAssigneeName()' Icon="@Icons.Filled.Person" IconColor="Color.Primary"/>
                            <MudTreeViewItem Value='"Dates"' Icon="@Icons.Filled.CalendarMonth" ExpandedIcon="@Icons.Filled.ArrowRight">
                                <MudTreeViewItem Value='@Model.Created' Icon="@Icons.Filled.Add" IconColor="Color.Primary"/>
                                <MudTreeViewItem Value='@Model.Modified' Icon="@Icons.Filled.Edit" IconColor="Color.Secondary"/>
                                <MudTreeViewItem Value='@Model.DateSolved' Icon="@Icons.Filled.Check" IconColor="Color.Success"/>
                            </MudTreeViewItem>
                        </MudTreeView>
                    </MudItem>
                </MudGrid>
            </MudItem>
        </MudGrid>
    </MudPaper>

    <MudText Typo="Typo.h5">Comments</MudText>

    <MudStack Spacing="8">
        @if (Comments != null)
        {
            @foreach (var comment in Comments)
            {
                <CommentView Comment="comment"></CommentView>
            }
        }
    </MudStack>
}